#-*-sh-*-

###########################################################################
#
# default.environment
#
# My standard environment
#
###########################################################################

# Aliases

alias ls="ls -F"
alias lsd="ls -Fd"
alias ll="ls -lF"
alias lld="ls -Fd"
alias la="ls -aF"
alias lad="ls -aFd"
alias lla="ls -laF"
alias llad="ls -laFd"

# Options

shopt -s checkwinsize
HISTCONTROL=ignoredups
HISTCONTROL=ignoreboth

# Functions

function zclear {
    clear
    date
    echo -n -e '\e[3J'

    if [ "$(type resize)" != "" ]
    then
	resize >/dev/null 2>&1
    fi
}

function zinfo {
    echo -e "$Z_SHELL_HISTORY"
}

function zsize {
    ls -laR $* | awk '{ x += $5 } ; END { print "Total Bytes: " x }'
}

function zclean {
    find . -type f -name '*~' -o -type f -name 'core' | while read file
    do
	echo "Removing $file"
	rm -f "$file"
    done
}

function zmodes {
    modes=`ls $ENVIRONMENT/*.environment | egrep -v default`
    for i in $modes
    do
      echo `basename $i | cut -d. -f1`
    done
}

function zmode {
    export Z_ENVIRONMENT="${1}"
    ${SHELL}
    Z_ENVIRONMENT=default
}

function zrun {
    if [ ! -f "${ENVIRONMENT}/${1}.environment" ]
    then
        echo "${1} is not a valid mode!"
    else
	. "${ENVIRONMENT}/${1}.environment"
	shift
	${SHELL} -c "${@}"
    fi
}

function zstamp {
    echo "`date +%d%b%Y`_`date +%Hh%Mm%Ss`"
}

function zsource {
    BASE="."

    if [ "" != "${1}" ]
    then
	BASE="${1}"
    fi

    find "${BASE}" -type f | egrep '(\.c$|\.h$|\.s$|\.S$|\.java$)'
}

function ztitle {
    # Konsole is "special", and there isn't a way to tell it's in use
    # after ssh... SO, add an option to work with it (-k).
    if [ "${1}" = "-k" ]
    then
	shift
	echo -ne "\033]30;${1}\007"
    else
	## This used to work with some terminal -- xfce maybe?
	#echo -ne "]0;${1}"
	## For gnome-terminal, ]0 instead of ]30
	echo -ne "\033]0;${1}\007"
    fi
}

function zclpath {
    OUT=""

    for item in `echo $2 | tr \'$1\' '\n' | awk ' !x[$0]++'`
    do
      if [ "" = "$OUT" ]
	  then
	  OUT="$item"
      else
	  OUT="$OUT:$item"
      fi
    done

    echo $OUT
}

function zunuse {
    DISK=$1

    while read l
    do
	if [[ $l ]]
	then
	    P=$(echo $l | cut -d' ' -f 1)
	    MP=$(echo $l | cut -d' ' -f 3)
	    echo "$P is mounted as $MP, unmounting."
	    umount $MP

	    if [ $? -ne 0 ]
	    then
		echo "umount $MP failed!"
		exit 1
	    fi
	fi
    done <<< $(mount | grep $DISK)

    while read l
    do
	if [[ $l ]]
	then
	    P=$(echo $l | cut -d' ' -f1)
	    echo "$P is used as swap, turning it off."
	    swapoff $P
	fi
    done <<< $(swapon -s | egrep $DISK)
}

# Note: Don't bother checking SSH_AGENT_PID. It's not used
#       by SSH itself, and it might even be incorrect
#       (for example, when using agent-forwarding over SSH).

function agent_is_running {
    if [ "$SSH_AUTH_SOCK" ]; then
        # ssh-add returns:
        #   0 = agent running, has keys
        #   1 = agent running, no keys
        #   2 = agent not running
        ssh-add -l >/dev/null 2>&1 || [ $? -eq 1 ]
    else
        false
    fi
}

function agent_has_keys {
    ssh-add -l >/dev/null 2>&1
}

function agent_load_env {
    . ~/.ssh/agent.`hostname`.env >/dev/null 2>&1
}

function agent_start {
    (umask 077; ssh-agent >~/.ssh/agent.`hostname`.env)
    . ~/.ssh/agent.`hostname`.env >/dev/null 2>&1
}

type ssh-agent >/dev/null 2>&1

if test $? -eq 0
then
    if ! agent_is_running
    then
	agent_load_env
    fi

    # if your keys are not stored in ~/.ssh/id_rsa or ~/.ssh/id_dsa, you'll need
    # to paste the proper path after ssh-add
    if ! agent_is_running
    then
	agent_start
	ssh-add >/dev/null 2>&1
    elif ! agent_has_keys
    then
	ssh-add >/dev/null 2>&1
    fi
fi

# Prompt
export PS1="[\u@\h \j] "

# Update history etc.
Z_DEFAULT_ENVIRONMENT_SOURCED=true
if [ -n "$Z_SHELL_HISTORY" ]
then
	Z_SHELL_HISTORY="$Z_SHELL_HISTORY\ndefault.environment,`date`,$0"
else
	Z_SHELL_HISTORY="default.environment,`date`,$0"
fi
